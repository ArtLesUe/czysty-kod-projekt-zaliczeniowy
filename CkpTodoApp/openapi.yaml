openapi: 3.0.3
info:
  title: Czysty kod - programowanie - projekt API
  description: Specyfikacja endpointów API w projekcie zaliczeniowym z przedmiotu "Czysty kod - programowanie".
  version: 1.0.0
servers:
  - url: http://localhost:5000
  - url: http://localhost:5039
tags:
  - name: auth
    description: Operacje związane z procesem logowania do aplikacji.
  - name: user
    description: Operacje związane z operacjami na modelu użytkownika.
paths:
  /api/user/login:
    post:
      tags:
        - auth
      summary: Generuje token używany do autoryzacji innych zapytań do API. Wymaga podania loginu i hasła istniejącego użytkownika.
      operationId: PostApiUserLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
        required: true
      responses:
        '422':
          description: Do zapytania przekazano niewłaściwe parametry lub brakuje wartości w niektóych wymaganych polach.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginTokenResponse'
              example: '{ "UserId": 0, "token": null }'
        '401':
          description: Użytkownik nie istnieje w bazie danych lub podano niewłaściwy login i hasło.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginTokenResponse'
              example: '{ "UserId": 0, "token": null }'
        '400':
          description: Niewłaściwe zapytanie. W body nie przekazano prawidłowego dokumentu JSON.
          content:
            application/json:
              example: '{"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"One or more validation errors occurred.","status":400,"traceId":"00-65cf8791d60a7eed48934ca825a386dc-7a49c856f4dd7379-00","errors":{"":["A non-empty request body is required."],"userLoginRequest":["The userLoginRequest field is required."]}}'
        '200':
          description: Logowanie przebiegło prawidłowo, token został zwrócony.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginTokenResponse'
  /api/user/list:
    get:
      tags:
        - user
      summary: Pobranie listy wszystkich użytkowników systemu bez pola z hasłem.
      operationId: GetApiUserList
      responses:
        '401':
          description: Nie przekazano Tokenu logowania lub Token jest niewłaściwy.
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/ApiUserModel'
                example: '[]'
        '200':
          description: Autoryzacja udana, pobrano listę użytkowników.
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/ApiUserModel'
  /api/user/register:
    post:
      tags:
        - user
      summary: Zakładanie nowego konta użytkownikowi przez administratora.
      operationId: PostApiUserRegister
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
        required: true
      responses:
        '401':
          description: Nie przekazano Tokenu logowania lub Token jest niewłaściwy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootResponse'
              example: { "Status": "wrong-auth" }
        '422':
          description: Do zapytania przekazano niewłaściwe parametry lub brakuje wartości w niektóych wymaganych polach. Status zwracany również, jeżeli użytkownik o podanym adresie e-mail jest już zarejestrowany.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootResponse'
              example: { "Status": "wrong-data" }
        '201':
          description: Użytkownik został pomyślnie zarejestrowany w aplikacji.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootResponse'
components:
  schemas:
    UserLoginRequest:
      type: object
      properties:
        Login:
          type: string
          format: email
          example: admin@admin.pl
        Password:
          type: string
          format: string
          example: admin123
    UserLoginTokenResponse:
      type: object
      properties:
        UserId:
          type: integer
          format: int64
          example: 1
        Token:
          type: string
          format: string
          example: 05734e7d-55cf-4d99-8a9d-961b36103ac0
    UserRegisterRequest:
      type: object
      properties:
        Name:
          type: string
          format: string
          example: Jan
        Surname:
          type: string
          format: string
          example: Kowalski
        Email:
          type: string
          format: email
          example: admin@admin.pl
        Password:
          type: string
          format: string
          example: admin123
    RootResponse:
      type: object
      properties:
        Status:
          type: string
          format: string
          example: OK
    ApiUserModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
          example: 1
        Name:
          type: string
          format: string
          example: Jan
        Surname:
          type: string
          format: string
          example: Nowak
        Email:
          type: string
          format: email
          example: admin@admin.com
        PasswordHashed:
          type: string
          format: md5
          example: 0192023A7BBD73250516F069DF18B500
        AboutMe:
          type: string
          format: string
          example: Opis profilu
        City:
          type: string
          format: string
          example: Katowice
        Country:
          type: string
          format: string
          example: Polska
        University:
          type: string
          format: string
          example: UE Katowice